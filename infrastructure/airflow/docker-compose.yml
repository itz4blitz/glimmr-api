version: '3.8'

networks:
  glimmr-backend:
    external: true
  glimmr-frontend:
    external: true

volumes:
  airflow_postgres_data:
  airflow_logs:
  airflow_dags:
  airflow_plugins:

services:
  # =============================================================================
  # AIRFLOW DATABASE (SEPARATE FROM MAIN GLIMMR DB)
  # =============================================================================
  airflow-postgres:
    image: postgres:15-alpine
    container_name: airflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow_dev_password_123
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    networks:
      - glimmr-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # AIRFLOW WEBSERVER
  # =============================================================================
  airflow-webserver:
    image: apache/airflow:2.7.3-python3.11
    container_name: airflow-webserver
    restart: unless-stopped
    depends_on:
      airflow-postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_dev_password_123@airflow-postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: dev_fernet_key_32_chars_long_12345
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      AIRFLOW__WEBSERVER__BASE_URL: 'http://localhost:8081'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin123
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ./dags:/opt/airflow/dags
    ports:
      - "8081:8080"
    command: webserver
    networks:
      - glimmr-backend
      - glimmr-frontend
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # AIRFLOW SCHEDULER
  # =============================================================================
  airflow-scheduler:
    image: apache/airflow:2.7.3-python3.11
    container_name: airflow-scheduler
    restart: unless-stopped
    depends_on:
      airflow-postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_dev_password_123@airflow-postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: dev_fernet_key_32_chars_long_12345
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ./dags:/opt/airflow/dags
    command: scheduler
    networks:
      - glimmr-backend
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname \"$${HOSTNAME}\""]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # AIRFLOW INIT (ONE-TIME SETUP)
  # =============================================================================
  airflow-init:
    image: apache/airflow:2.7.3-python3.11
    container_name: airflow-init
    depends_on:
      airflow-postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow_dev_password_123@airflow-postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: dev_fernet_key_32_chars_long_12345
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin123
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    command: version
    networks:
      - glimmr-backend
